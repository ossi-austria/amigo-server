plugins {
    id 'org.springframework.boot' version '2.5.5'
    id 'io.spring.dependency-management'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'org.jetbrains.kotlin:kotlin-reflect'

    implementation 'javax.persistence:javax.persistence-api'
    implementation 'org.hibernate:hibernate-core' //, version: '5.3.12.Final'

    implementation "org.projectlombok:lombok"

    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-validation"

    // spring data, JPA, Repositories and DB migration
    implementation 'org.springframework.data:spring-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "org.flywaydb:flyway-core"
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'com.h2database:h2'

    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    implementation "com.google.firebase:firebase-admin:$firebaseAdminVersion"

    // testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation "org.junit.jupiter:junit-jupiter:$jupiterVersion"
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation "io.mockk:mockk:${mockkVersion}"
    testImplementation "com.ninja-squad:springmockk:$springmockkVersion"
    testImplementation "io.zonky.test:embedded-database-spring-test:$zonkPostegresTestVersion"

}

allOpen {
    annotation("javax.persistence.Entity")
    annotation("javax.persistence.MappedSuperclass")
    annotation("javax.persistence.Embeddable")
}

jar {
    enabled = true
}

bootJar {
    enabled = false
}
